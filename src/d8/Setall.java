/*
 * Sets - All N-Digit Numbers
==========================

You are given a set of numbers and a number N. Print all N-digit numbers 
that can be formed by the numbers in the given set. The numbers must be 
used in the order as in the given set. For the following input

The number set: 4 3 8
N: 3

The first four numbers must be
444
443
448
434

PROBLEM NAME: setall

INPUT FORMAT:

* Line 1: A single integer: M

* Line 2: M space-seperated integers: number set

* Line 3: A single integer: N

SAMPLE INPUT:
3
4 3 8
3

OUTPUT FORMAT:

* Lines 1..?: An N-digit number generated by the numbers in the given set

SAMPLE OUTPUT:
444
443
448
434
433
438
484
483
488
344
343
348
334
333
338
384
383
388
844
843
848
834
833
838
884
883
888
 */
package d8;

import java.io.*;

public class Setall {
	
	public static void main(String[] args) throws IOException {
		long startTime = System.nanoTime();
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int M = Integer.parseInt(br.readLine());
		String[] numSet = br.readLine().split(" ");
		int N = Integer.parseInt(br.readLine());
		int[] numSetInt = new int[M];
		for (int i=0; i<M; i++){
			numSetInt[i] = Integer.parseInt(numSet[i]);
		}
		
//		setall(numSetInt, N, 0, "");
		int[] a = new int[N];
		P(0,N,numSetInt,a);
		
		System.out.println("Took "+(double)(System.nanoTime() - startTime)/1000000000 + " s");
		br.close();
	}
	public static void P(int c, int N, int[] numSetInt, int[] a){
		if (c==N){
			for (int i=0; i<N; i++){
				System.out.print(a[i]);
			}
			System.out.println();
		}else{
			for (int j=0; j<numSetInt.length; j++){
				a[c] = numSetInt[j];
				P(c+1, N, numSetInt, a);
			}
		}
	}
	public static int fact(int M){
		if (M==0){
			return 1;
		}
		return M*fact(M-1);
	}
	

}
